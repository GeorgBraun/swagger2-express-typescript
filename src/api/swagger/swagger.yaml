swagger: "2.0"
info:
  version: "0.0.1"
  title: Document RestAPI
# during dev, should point to your local machine
#host: localhost:10010 # Auskommentiert, damit Swagger-UI auf verschiedenen Rechnern funktioniert. Der Port wird in app.js festgelegt.
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /timestamp:
    x-swagger-router-controller: timestamp
    get:
      summary: Get current timestamp
      description: Gets the current server time as a timestamp
      operationId: getTimestamp
      responses:
        "200":
          description: Success
          schema:
            type: string
            example: "2018-9-20 23:02:46"
        default:
          $ref: "#/responses/ErrorResponse"
  /documents:
    x-swagger-router-controller: documents
    post:
      summary: Add a new document
      description: Add a new document. Properties createdAt, id and downloads will be set by the server.
      operationId: create
      parameters:
        - name: newDocument
          description: Attributes of new document
          in: body
          required: true
          schema:
            $ref: "#/definitions/NewDocument"
      responses:
        "201":
          description: Successfully created
          schema:
            $ref: "#/definitions/ExistingDocument"
        default:
          $ref: "#/responses/ErrorResponse"
    get:
      summary: Get all documents
      description: Get all available documents from list
      operationId: readAll
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ExistingDocument"
        default:
          $ref: "#/responses/ErrorResponse"
  /documents/{id}:
    x-swagger-router-controller: documents
    get:
      summary: Get a document
      description: Get a document by its ID
      operationId: readById
      parameters:
        - name: id
          description: Document id
          type: number
          format: int32
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ExistingDocument"
        default:
          $ref: "#/responses/ErrorResponse"
    delete:
      summary: Delete a document
      description: Delete a document by its ID
      operationId: deleteById
      parameters:
        - name: id
          description: Document id
          type: number
          format: int32
          in: path
          required: true
      responses:
        "200":
          $ref: "#/responses/DeleteResponse"
        default:
          $ref: "#/responses/ErrorResponse"
    patch:
      summary: Update a document
      description: Update some attributes of a document identified by its ID
      operationId: updateById
      parameters:
        - name: id
          description: Document id
          type: number
          format: int32
          in: path
          required: true
        - name: Document
          description: Only those attributes of existing document, that should change.
          in: body
          required: true
          schema:
            $ref: "#/definitions/DocumentOptional"
      responses:
        "200":
          description: Successfully updated
          schema:
            $ref: "#/definitions/ExistingDocument"
        default:
          $ref: "#/responses/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  # Model definition for a new Document
  NewDocument:
    properties:
      title:
        type: string
        description: Title of the document
      author:
        type: string
        description: Author of the document
      content:
        type: string
        description: Content of the document
    required:
      - title
      - author
      - content
    example:
      title: Example title for a new document
      author: Example author for a new document
      content: Example content for a new document
  # An existing Document has more data:
  ExistingDocument:
    properties:
      id:
        type: number
        format: int32
        description: Id of document
      title:
        type: string
        description: Title of the document
      author:
        type: string
        description: Author of the document
      content:
        type: string
        description: Content of the document
      createdAt:
        type: string
        format: date
        description: Timestamp when document was created on server
      downloads:
        type: number
        description: Counts how often the document has been requested from the server
    required:
      - id
      - title
      - author
      - content
      - createdAt
      - downloads
    example:
      createdAt: 2018-09-20T21:01:29.060Z
      title: Example title in an existing document
      author: Example author in an existing document
      content: Example content in an existing document
      id: 2
      downloads: 0
  DocumentOptional:
    properties:
      title:
        type: string
        description: Title of the document
      author:
        type: string
        description: Author of the document
      content:
        type: string
        description: Content of the document
    example:
      title: Optional example title
      author: Optional example author
      content: Optional example content
# response definitions:
responses:
  DeleteResponse:
    description: Success
    schema:
      type: object
      properties:
        success:
          type: number
          format: int32
        description:
          type: string
      required:
        - success
        - description
      example:
        success: 1
        description: Document with id 0 is deleted.
  ErrorResponse:
    description: Error
    schema:
      properties:
        message:
          type: string
      required:
        - message
      example:
        message: ERROR in ... 
